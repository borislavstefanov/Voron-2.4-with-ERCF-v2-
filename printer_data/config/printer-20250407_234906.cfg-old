#[include mmu/base/*.cfg]
#[include mmu/optional/client_macros.cfg]
[virtual_sdcard]
path: ~/printer_data/gcodes
[display_status]
[pause_resume]




[include sample-bigtreetech-mmb-canbus-v2.0.cfg]
[include macros.cfg]
[include z_calibration.cfg]
[include klicky-probe.cfg]
[include moonraker_obico_macros.cfg]
# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_120014001350565843333620-if00
restart_method: command
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 3000             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: !PG6
position_min: 0
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: !PG9
position_min: 0
##--------------------------------------------------------------------



##  Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: PG10
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_max: 230

##  Uncomment below for 300mm build
#position_max: 280

##  Uncomment below for 350mm build
position_max: 330

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
[extruder]
step_pin: PE2
dir_pin: PE3
enable_pin: !PD4
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:17               #BMG Gear Ratio
gear_ratio: 50:17               #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA2
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: ATC Semitec 104GT-2
sensor_pin: PF4
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
#pressure_advance: 0.05
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040
max_extrude_cross_section: 5
##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PE1
interpolate: false
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
 ## SSR Pin - HE1
 ##Thermistor - TB
##  Uncomment the following line if using the default SSR wiring from the docs site
heater_pin: PA3
##  Other wiring guides may use BED_OUT to control the SSR. Uncomment the following line for those cases
#heater_pin: PA1
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 130
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

[probe]
##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling

## Select the probe port by type:
## For the PROBE port. Will not work with Diode. May need pull-up resistor from signal to 24V.
#pin: ~!PB7
## For the DIAG_7 port. NEEDS BAT85 DIODE! Change to !PG15 if probe is NO.
pin: PG15
## For Octopus Pro PROBE port; NPN and PNP proximity switch types can be set by jumper
#pin: ~!PC5

#--------------------------------------------------------------------

x_offset: 0
y_offset: 25.0
#z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance:0.073
#samples_tolerance: 0.006
samples_tolerance_retries: 3

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - FAN0
pin: PA8
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##  Hotend Fan - FAN1
pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[controller_fan controller_fan]
##  Controller fan - FAN2
pin: PD12
kick_start_time: 0.5
heater: heater_bed

[heater_fan exhaust_fan]
##  Exhaust fan - FAN3
pin: PD13
max_power: 0.3
shutdown_speed: 0.0
kick_start_time: 5.0
heater: heater_bed
heater_temp: 60
fan_speed: 1.0

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
#[output_pin caselight]
#pin: PB10
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

#[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
#home_xy_position:350,350
#home_xy_position:231.4,346
#home_xy_position:234.400,350
#speed:100
#z_hop:5

[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions

#--------------------------------------------------------------------

## Gantry Corners for 350mm Build
#Uncomment for 350mm build
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   50,50
   50,275
   300,275
   300,50

#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 5
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##  RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

[display]
 # mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

#[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

##  Set RGB values on boot up for each Neopixel.
##  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3

#--------------------------------------------------------------------

[neopixel leds]
pin: PB0
chain_count: 61
color_order: GRBW
initial_red: 0.9
initial_green: 0.7
initial_blue: 0.9




[temperature_fan RaspberryPi_CPU]
pin: PB7
max_power: 1
kick_start_time: 0.5
off_below: 0.35
sensor_type: temperature_host
control: pid
pid_kp = 0.5
pid_ki = 0.5
pid_kd = 0.5
min_temp: 0
max_temp: 100
target_temp: 50

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100
[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0




[axis_twist_compensation]
speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
calibrate_start_x: 50
#   Defines the minimum X coordinate of the calibration
#   This should be the X coordinate that positions the nozzle at the starting
#   calibration position.
calibrate_end_x: 350
#   Defines the maximum X coordinate of the calibration
#   This should be the X coordinate that positions the nozzle at the ending
#   calibration position.
calibrate_y: 175
#   Defines the Y coordinate of the calibration
#   This should be the Y coordinate that positions the nozzle during the
#   calibration process. This parameter is recommended to
#   be near the center of the bed

# For Y-axis twist compensation, specify the following parameters:
calibrate_start_y: 0
#   Defines the minimum Y coordinate of the calibration
#   This should be the Y coordinate that positions the nozzle at the starting
#   calibration position for the Y axis. This parameter must be provided if
#   compensating for Y axis twist.
calibrate_end_y: 350
#   Defines the maximum Y coordinate of the calibration
#   This should be the Y coordinate that positions the nozzle at the ending
#   calibration position for the Y axis. This parameter must be provided if
#   compensating for Y axis twist.
calibrate_x: 50
#   Defines the X coordinate of the calibration for Y axis twist compensation
#   This should be the X coordinate that positions the nozzle during the
#   calibration process for Y axis twist compensation. This parameter must be
#   provided and is recommended to be near the center of the bed.

#   Macros
#####################################################################

# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

[gcode_macro Z_Offset_calibration]
gcode:
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    CLEAN_NOZZLE
    G28
    BED_MESH_PROFILE LOAD="default"
    CALIBRATE_Z


[gcode_macro TEST_SPEED]
gcode:
	# Speed
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	# Iterations
	{% set iterations = params.ITERATIONS|default(5)|int %}
	# Acceleration
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	# Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
	{% set bound = params.BOUND|default(20)|int %}
	# Size for small pattern box
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}

	# Large pattern
		# Max positions, inset by BOUND
		{% set x_min = printer.toolhead.axis_minimum.x + bound %}
		{% set x_max = printer.toolhead.axis_maximum.x - bound %}
		{% set y_min = printer.toolhead.axis_minimum.y + bound %}
		{% set y_max = printer.toolhead.axis_maximum.y - bound %}

	# Small pattern at center
		# Find X/Y center point
		{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
		{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}

		# Set small pattern box around center point
		{% set x_center_min = x_center - (smallpatternsize/2) %}
		{% set x_center_max = x_center + (smallpatternsize/2) %}
		{% set y_center_min = y_center - (smallpatternsize/2) %}
		{% set y_center_max = y_center + (smallpatternsize/2) %}

	# Save current gcode state (absolute/relative, etc)
	SAVE_GCODE_STATE NAME=TEST_SPEED

	# Output parameters to g-code terminal
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }

	# Home and get position for comparison later:
		G28
		# QGL if not already QGLd (only if QGL section exists in config)
		{% if printer.configfile.settings.quad_gantry_level %}
			{% if printer.quad_gantry_level.applied == False %}
				QUAD_GANTRY_LEVEL
				G28 Z
			{% endif %}
		{% endif %}
		G90
		G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
		G4 P1000
		GET_POSITION

	# Go to starting position
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

	# Set new limits
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

	{% for i in range(iterations) %}
		# Large pattern
			# Diagonals
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_max} Y{y_max} F{speed*60}
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
			G0 X{x_min} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}

			# Box
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_min} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}

		# Small pattern
			# Small diagonals
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_max} Y{y_center_max} F{speed*60}
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}

			# Small box
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}

	# Restore max speed/accel/accel_to_decel to their configured values
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}

	# Re-home and get position again for comparison:
		G28
		# Go to XY home positions (in case your homing override leaves it elsewhere)
		G90
		G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
		G4 P1000
		GET_POSITION

	# Restore previous gcode state (absolute/relative, etc)
	RESTORE_GCODE_STATE NAME=TEST_SPEED


##### Start Macros ###############################################################################
[gcode_macro PRINT_START]
gcode:
	# This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
	{% set target_bed = params.BED|int %}
	{% set target_extruder = params.EXTRUDER|int %}
	{% set target_chamber = params.CHAMBER|default("40")|int %}
	{% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
	{% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

	# Homes the printer, sets absolute positioning and updates the Stealthburner leds.
	G28                   								# Full home (XYZ)
	G90                   								# Absolut position

	# Attach Klicky probe and lock it to prevent multiple dock/undock runs
	ATTACH_PROBE_LOCK

	BED_MESH_CLEAR       								# Clears old saved bed mesh (if any)

	# Heat up bed to temperature requested by slicer
	G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
	M190 S{target_bed}                                  # Sets the target temp for the bed

	# Heating nozzle to 150 degrees. This helps with getting a correct Z-home
	M109 S150                                    		# Heats the nozzle to 150c

	##  Quad gantry level AKA QGL
	QUAD_GANTRY_LEVEL               					# Levels the buildplate via QGL
	G28 Z                           					# Homes Z again after QGL

	BED_MESH_CALIBRATE ADAPTIVE=1						# Starts bed mesh (adaptive)

	# Undock the Klicky probe
	DOCK_PROBE_UNLOCK

	# Heats up the nozzle up to target via data from slicer
	G1 X{x_wait} Y{y_wait} Z15 F9000                 	# Goes to center of the bed
	M107												# Turns off partcooling fan
	M109 S{target_extruder}								# Heats the nozzle to printing temp

	# Gets ready to print by doing a purge line
	G0 X{x_wait - 50} Y4 F10000                      	# Moves to starting point
	G0 Z0.4                                          	# Raises Z to 0.4
	G91                                              	# Incremental positioning
	G1 X100 E20 F1000                                	# Purge line
	G90                                              	# Absolut position



[gcode_macro CALIBRATE_Z]
rename_existing: BASE_CALIBRATE_Z
gcode:
    {% set nozzle_position = params.NOZZLE_POSITION %}
    {% set switch_position = params.SWITCH_POSITION %}
    {% set bed_position = params.BED_POSITION %}
    {% set switch_offset = params.SWITCH_OFFSET %}
    G28                         # can also be a conditional homing macro
    M117 Z-Calibration..
    ATTACH_PROBE                # a macro for fetching the probe first
    BASE_CALIBRATE_Z NOZZLE_POSITION={nozzle_position} SWITCH_POSITION={switch_position} BED_POSITION={bed_position} SWITCH_OFFSET={switch_offset}
    DETACH_PROBE                # and parking it afterwards (or DOCK_PROBE in klicky macros)
    M117




[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}

    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament

    TURN_OFF_HEATERS

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan

    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


[bed_mesh]
speed: 100
# The speed (in mm/s) of non-probing moves during the calibration.
# The default is 50.
horizontal_move_z: 5
# The height (in mm) that the head should be commanded to move to
# just prior to starting a probe operation. The default is 5.
mesh_min: 40,50
# Defines the minimum X, Y coordinate of the mesh for rectangular
# beds. This coordinate is relative to the probe's location. This
# will be the first point probed, nearest to the origin. This
# parameter must be provided for rectangular beds.
mesh_max: 320,320
# Defines the maximum X, Y coordinate of the mesh for rectangular
# beds. Adheres to the same principle as mesh_min, however this will
# be the furthest point probed from the bed's origin. This parameter
# must be provided for rectangular beds.
zero_reference_position: 175,175 #for use with stock z endstop
probe_count: 7,7
fade_start: 1.0
fade_end: 10.0
#move_check_distance: 5.0
# The distance (in mm) along a move to check for split_delta_z.
# This is also the minimum length that a move can be split. Default
# is 5.0.
#mesh_pps: 2, 2
algorithm: bicubic
#bicubic_tension: .2
#relative_reference_index: 12
adaptive_margin: 5
split_delta_z: .025

[gcode_macro LED_PRINT_SPEED_PROGRES]
  gcode: NEOPIXEL_DISPLAY LED=leds TYPE=print_speed MODE=progress

[gcode_macro LED_PRINT_PROROGRES]
  gcode: NEOPIXEL_DISPLAY LED=leds TYPE=print_percent MODE=progress

[gcode_macro LED_PRINT_SPEED]
  gcode: NEOPIXEL_DISPLAY LED=leds TYPE=printer_speed MODE=glow

[gcode_macro LED_BED_TEMP]
  gcode: NEOPIXEL_DISPLAY LED=leds TYPE=bed_temp MODE=progress

[include mainsail.cfg]
[include timelapse.cfg]
[include ledcontrol.cfg]
[include led_progress.cfg]
[exclude_object]

[include macros.cfg]
[gcode_macro SET_LEDCONTROL]



# SET_LEDCONTROL PRESET="my_preset"
#
# or set the pattern and parameters directly for a LED group (default group is "main"):
#
#SET_LEDCONTROL GROUP="main" BRIGHTNESS=0.7 SATURATION=0.5 PATTERN=0 SCALE=0.2 SPEED=0.4 PALETTE=0
#
# You can also set global saturation and brightness (for all LEDs) with:
 #SET_LEDCONTROL GLOBAL_BRIGHTNESS=1.0 GLOBAL_SATURATION=1.0
#
# Built-in Patterns:
# 0: Static Color
# 1: Static White
# 2: Static Gradient 1D
# 3: Static Gradient Mirrored 1D
# 6: Twinkle Gradient 1D
# 7: Twinkle White 1D
# 100: Palette Cycle 1D
# 110: Palette Cycle Mirrored 1D
# 112: Palette Cycle Wipe 1D
# 114: Palette Cycle Wipe From Center 1D
# 120: Palette Cycle Quantized 1D
# 130: Palette Cycle Random 1D
# 140: Palette Scan Mirrored 1D
# 141: Palette Bounce Mirrored 1D
# 150: Palette Waves 1D
# 160: Palette Ripples 1D
# 161: Palette Ripples (Fast Cycle) 1D
# 170: Palette Plasma 2D
# 180: Palette Fractal Plasma 2D
# 190: Palette Twinkle 1D
# 200: Palette Perlin Noise 2D
# 210: Palette fBm Noise 2D
# 310: Hue Cycle 1D
# 320: Hue Cycle Quantized 1D
# 330: Hue Scan 1D
# 331: Hue Bounce 1D
# 340: Hue Waves 1D
# 350: Hue Ripples 1D
# 400: RGB Sines 1D
# 410: RGB Cubics 1D
# 420: RGB Ripples 1D
# 430: RGB Plasma (Spectrum Sines) 2D
# 440: RGB Plasma (Fire Sines) 2D
# 450: RGB Fractal Plasma (Fire Sines) 2D

# Built-in Palettes:
# 0: Malibu
# 20: Miami
# 50: Twilight 1
# 51: Twilight 2
# 60: Tropical 1
# 61: Tropical 2
# 70: Anaglyph
# 80: Lemonbars
# 90: Birefringence
# 100: City Lights 1
# 101: City Lights 2
# 102: City Lights 3
# 200: Sky Blue
# 210: Blurple
# 220: Winter
# 230: Nebula
# 240: Hot Pink
# 250: Light Pink
# 260: Peach
# 270: Summer
# 280: Red Orange
# 290: Golden Hour
# 500: Spectrum

gcode:
  {action_call_remote_method("set_led",
    preset = params.PRESET|default(""),
    group = params.GROUP|default("main"),
    brightness=params.BRIGHTNESS|default(""),
    saturation=params.SATURATION|default(""),
    pattern=params.PATTERN|default(""),
    speed=params.SPEED|default(""),
    scale=params.SCALE|default(""),
    palette=params.PALETTE|default(""),
    global_brightness=params.GLOBAL_BRIGHTNESS|default(""),
    global_saturation=params.GLOBAL_SATURATION|default(""),
    )}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = -0.105
#*#
#*# [stepper_z]
#*# position_endstop = -0.245
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 17.614
#*# pid_ki = 0.810
#*# pid_kd = 95.778
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 38.096
#*# pid_ki = 1.330
#*# pid_kd = 272.864
#*#
#*# [bed_mesh default20]
#*# version = 1
#*# points =
#*# 	0.131598, 0.097848, 0.041598, 0.050348, 0.067848, 0.119098, 0.167848
#*# 	0.139098, 0.091598, 0.035348, 0.030348, 0.052848, 0.101598, 0.127848
#*# 	0.114098, 0.076598, 0.005348, 0.010348, 0.029098, 0.070348, 0.107848
#*# 	0.104098, 0.064098, 0.010348, -0.002152, 0.029098, 0.077848, 0.111598
#*# 	0.094098, 0.061598, 0.006598, 0.009098, 0.035348, 0.080348, 0.125348
#*# 	0.127848, 0.094098, 0.045348, 0.035348, 0.056598, 0.105348, 0.144098
#*# 	0.167848, 0.125348, 0.062848, 0.054098, 0.071598, 0.120348, 0.160348
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 319.96
#*# min_y = 50.0
#*# max_y = 320.0
#*#
#*# [bed_mesh default1]
#*# version = 1
#*# points =
#*# 	0.192593, 0.140093, 0.071343, 0.078843, 0.112593, 0.162593, 0.231343
#*# 	0.197593, 0.133843, 0.050093, 0.050093, 0.082593, 0.142593, 0.212593
#*# 	0.192593, 0.121343, 0.027593, 0.016343, 0.063843, 0.115093, 0.172593
#*# 	0.166343, 0.102593, 0.033843, -0.004907, 0.070093, 0.138843, 0.190093
#*# 	0.160093, 0.102593, 0.037593, 0.027593, 0.070093, 0.123843, 0.177593
#*# 	0.183843, 0.120093, 0.060093, 0.051343, 0.083843, 0.140093, 0.217593
#*# 	0.203843, 0.145093, 0.068843, 0.060093, 0.088843, 0.170093, 0.195093
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 319.96
#*# min_y = 50.0
#*# max_y = 320.0
#*#
#*# [bed_mesh default12]
#*# version = 1
#*# points =
#*# 	0.190395, 0.135395, 0.066645, 0.075395, 0.110395, 0.156645, 0.230395
#*# 	0.192895, 0.129145, 0.044145, 0.044145, 0.077895, 0.136645, 0.207895
#*# 	0.182895, 0.114145, 0.024145, 0.010395, 0.057895, 0.110395, 0.171645
#*# 	0.156645, 0.094145, 0.027895, -0.003355, 0.056645, 0.122895, 0.182895
#*# 	0.146645, 0.092895, 0.030395, 0.019145, 0.059145, 0.122895, 0.174145
#*# 	0.172895, 0.106645, 0.051645, 0.046645, 0.077895, 0.134145, 0.212895
#*# 	0.200395, 0.134145, 0.057895, 0.046645, 0.080395, 0.162895, 0.189145
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 319.96
#*# min_y = 50.0
#*# max_y = 320.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.086953, 0.026953, 0.030703, 0.073203, 0.106953, 0.108203, 0.098203
#*# 	0.094453, 0.039453, 0.011953, 0.040703, 0.063203, 0.086953, 0.079453
#*# 	0.086953, 0.019453, -0.013047, 0.011953, 0.045703, 0.056953, 0.064453
#*# 	0.064453, 0.015703, -0.016797, 0.000703, 0.050703, 0.055703, 0.063203
#*# 	0.073203, 0.006953, -0.008047, 0.011953, 0.056953, 0.064453, 0.060703
#*# 	0.081953, 0.019453, 0.000703, 0.033203, 0.061953, 0.076953, 0.076953
#*# 	0.093203, 0.038203, 0.020703, 0.048203, 0.075703, 0.104453, 0.056953
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 319.96
#*# min_y = 50.0
#*# max_y = 320.0
#*#
#*# [axis_twist_compensation]
#*# z_compensations = -0.018333, 0.012917, 0.005417
#*# compensation_start_x = 50.0
#*# compensation_end_x = 350.0
#*#
#*# [bed_mesh default22]
#*# version = 1
#*# points =
#*# 	0.031295, 0.018516, -0.016764, 0.040458, 0.057047, 0.047213, 0.042380
#*# 	0.043795, -0.000234, -0.014264, 0.011708, 0.047047, 0.035963, 0.021130
#*# 	0.022545, -0.015234, -0.033014, -0.002042, 0.030797, 0.025963, -0.003870
#*# 	0.013795, -0.017734, -0.038014, 0.005458, 0.030797, 0.032213, 0.017380
#*# 	0.007545, -0.018984, -0.033014, 0.004208, 0.035797, 0.037213, 0.017380
#*# 	0.012545, -0.027734, -0.016764, 0.020458, 0.048297, 0.040963, 0.022380
#*# 	0.035045, -0.013984, -0.005514, 0.022958, 0.048297, 0.053463, 0.013630
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 319.96
#*# min_y = 50.0
#*# max_y = 320.0
#*#
#*# [bed_mesh default23]
#*# version = 1
#*# points =
#*# 	-0.018429, 0.001293, 0.046013, 0.065734, 0.054823, 0.027490, 0.021407
#*# 	0.001571, 0.008793, 0.024763, 0.049484, 0.043573, 0.014990, 0.000157
#*# 	0.006571, -0.002457, 0.014763, 0.016984, 0.027323, 0.032490, -0.019843
#*# 	-0.004679, -0.018707, 0.004763, -0.003016, 0.033573, 0.003740, -0.012343
#*# 	-0.020929, -0.017457, 0.017263, 0.031984, 0.022323, 0.009990, -0.009843
#*# 	-0.003429, -0.013707, 0.037263, 0.055734, 0.047323, 0.008740, 0.005157
#*# 	0.029071, 0.010043, 0.016013, 0.053234, 0.042323, 0.023740, -0.029843
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 319.96
#*# min_y = 50.0
#*# max_y = 320.0
